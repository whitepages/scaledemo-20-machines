; -*- mode: clojure; -*-
; vim: filetype=clojure

(logging/init :file "riemann.log")

; Listen on the local interface over TCP (5555), UDP (5555), and websockets
; (5556)
  (let [host "0.0.0.0"]
   (tcp-server :host host)
   (udp-server :host host)
   (ws-server  :host host))

  ; Expire old events from the index every 5 seconds.
(periodically-expire 5)

  ; Keep events in the index for 5 minutes by default.
  (let [index (default :ttl 300 (update-index (index)))]

   ; Inbound events will be passed to these streams:
   (streams index

    ;           (where (not (tagged "value"))
      ;                  #(info %))

    (where (tagged "value")
     (with {:metric 1 :service "svc rand req" :tagged ["stat"]} (rate 1 index)))

    ; Calculate an overall rate of events.
    (with {:metric 1 :host nil :state "ok" :service "events/sec"}
     (rate 1 index))
    ; Log expired events.
    (expired
     (fn [event] (info "expired" event)))))
